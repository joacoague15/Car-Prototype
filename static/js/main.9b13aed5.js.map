{"version":3,"file":"static/js/main.9b13aed5.js","mappings":"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","sources":["../node_modules/hammerjs/hammer.js","../node_modules/howler/dist/howler.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","index.js"],"sourcesContent":["/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/Car-Prototype/\";","import { Howl } from 'howler';\nimport Hammer from 'hammerjs';\n\nimport openCarSound from './sounds/car-open.wav';\nimport startEngineSound from './sounds/start-engine.wav';\nimport carMovingSound from './sounds/car-moving.wav';\nimport firstCopilotLetIndicationSound from './sounds/first-copilot-left-indication.mp3';\n\ndocument.getElementById('playButton').addEventListener('click', () => {\n    const openSound = new Howl({\n        src: [openCarSound],\n        onend: () => startEngine()\n    });\n\n    openSound.play();\n    document.getElementById('playButton').style.display = 'none';\n});\n\nconst startEngine = () => {\n    const engineSound = new Howl({\n        src: [startEngineSound],\n        onend: () => carMoving()\n    });\n\n    engineSound.play();\n}\n\nconst carMoving = () => {\n    const movingSound = new Howl({\n        src: [carMovingSound],\n        loop: true,\n    });\n\n    copilotStartTalking();\n\n    movingSound.play();\n}\n\nconst copilotStartTalking = () => {\n    const firstCopilotIndication = new Howl({\n        src: [firstCopilotLetIndicationSound],\n        onend: () => startHandleSteeringWheel()\n    });\n\n    firstCopilotIndication.play();\n}\n\nconst startHandleSteeringWheel = () => {\n    const swipeArea = document.getElementById('swipe-area');\n    const hammerManager = new Hammer(swipeArea);\n\n    hammerManager.add(new Hammer.Swipe({ direction: Hammer.DIRECTION_LEFT }));\n\n    hammerManager.on('swipeleft', (e) => {\n        const engineSound = new Howl({\n            src: [startEngineSound],\n            onend: () => carMoving()\n        });\n\n        engineSound.play();\n    });\n}\n"],"names":["window","document","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","toggleCssProps","item","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_MOVE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Tap","Pan","Swipe","Pinch","Rotate","Press","define","HowlerGlobal","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","checkOpera","match","isOldOpera","parseInt","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","_emit","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","audio","suspend","_sounds","_paused","_suspendTimer","handleSuspension","_resumeAfterSuspend","Howl","o","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","action","url","exec","location","protocol","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","max","_seek","duration","setParams","_start","_stop","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","fade","from","to","len","min","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","_fadeTo","setInterval","tick","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","remCache","cache","isId","msg","task","shift","ended","_drain","limit","cnt","_panner","isIOS","vendor","howl","_parent","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_pos","_orientation","stereo","pan","pos","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","createPanner","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","n","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","Function","p","getElementById","openCarSound","startEngine","display","startEngineSound","carMoving","movingSound","carMovingSound","copilotStartTalking","firstCopilotLetIndicationSound","startHandleSteeringWheel","swipeArea","hammerManager"],"sourceRoot":""}